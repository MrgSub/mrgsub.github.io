{"version":3,"sources":["serviceWorker.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","App","memo","theme","className","px","padding","color","bg","alignItems","sx","position","top","width","p","fontWeight","variant","href","mx","mt","justifyContent","height","fontSize","lineHeight","textAlign","flexWrap","mb","overflow","title","url","img","status","case","map","el","key","minWidth","backgroundColor","fontFamily","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2KAAoBA,QACU,cAA7BC,OAAOC,SAASC,UAEc,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACxB,2D,oDCqHYC,EArHHC,gBAAK,WAgChB,OACC,kBAAC,IAAD,CAAeC,MAAOA,KACrB,kBAAC,IAAD,CACCC,UAAU,SACVC,GAAI,EACJC,QAAS,GACTC,MAAM,QACNC,GAAG,cACHC,WAAW,SACXC,GAAI,CAAEC,SAAU,QAASC,IAAK,GAC9BC,MAAO,QAEP,kBAAC,IAAD,CAAMC,EAAG,EAAGC,WAAW,SACtB,kBAAC,IAAD,CAAMC,QAAQ,MAAMC,KAAK,YAAzB,SAID,kBAAC,IAAD,CAAKC,GAAG,SACR,kBAAC,IAAD,CAAMF,QAAQ,MAAMC,KAAK,qBAAzB,MAID,kBAAC,IAAD,CAAMb,UAAU,QAAQe,GAAI,GAAIC,eAAgB,UAC/C,kBAAC,IAAD,CACCN,EAAG,GACHD,MAAO,CAAC,OAAQ,OAChBQ,OAAQ,OACRd,MAAM,QACNC,GAAG,eAEH,kBAAC,IAAD,CACCc,SAAU,CAAC,GAAI,IACfC,WAAY,OACZC,UAAU,UAHX,0BASF,kBAAC,IAAD,CACCC,SAAU,UACVnB,QAAS,GACTC,MAAM,QACNC,GAAG,QACHkB,GAAI,GACJhB,GAAI,CAAEiB,SAAU,SA3EF,CAChB,CACCC,MAAO,QACPC,IAAK,mBACL/B,SAAU,yBACVgC,IAAK,kCACLC,OAAQ,cACRC,KACC,0KAEF,CACCJ,MAAO,OACPC,IAAK,kBACL/B,SAAU,+BACVgC,IACC,sEACDE,KAAM,GACND,OAAQ,eAET,CACCH,MAAO,UACPC,IAAK,sBACL/B,SAAU,+BACVgC,IACC,2IACDE,KAAM,GACND,OAAQ,SAmDGE,KAAI,SAACC,EAAIC,GAClB,OACC,kBAAC,IAAD,CACC/B,UAAU,UACV+B,IAAKA,EACLC,SAnFe,IAoFfX,SAAS,OACTN,GAAI,GAEJ,kBAAC,IAAD,CACCL,EAAG,IACHuB,gBAAgB,QAChBxB,MAAO,CAAC,IAER,kBAAC,IAAD,CAAMO,eAAe,UACpB,kBAAC,IAAD,CAAKb,MAAM,SACV,kBAAC,IAAD,CAAMS,QAAQ,MAAMC,KAAMiB,EAAGL,KAC5B,kBAAC,IAAD,CACCP,SAAU,CAAC,EAAG,EAAG,GACjBgB,WAAW,UAEVJ,EAAGN,UAKR,kBAAC,IAAD,CAAMT,GAAI,EAAGC,eAAe,UAC3B,kBAAC,IAAD,CAAKb,MAAM,SAAS2B,EAAGH,mB,eCxGhCQ,EAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SF8G5C,kBAAmBC,WACtBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GAClCA,EAAaC,kB","file":"static/js/main.5a8d37ba.chunk.js","sourcesContent":["const isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import { Box, Flex, Heading, Link, Text } from 'rebass';\nimport React, { memo } from 'react';\n\nimport { ThemeProvider } from 'emotion-theming';\nimport theme from '@rebass/preset';\n\nconst App = memo(() => {\n\tconst DefaultWidth = 250;\n\tconst Projects = [\n\t\t{\n\t\t\ttitle: 'Baham',\n\t\t\turl: 'https://baham.ca',\n\t\t\tlocation: 'Canada - Vancouver, BC',\n\t\t\timg: 'https://i.imgur.com/aH37Hws.png',\n\t\t\tstatus: 'IN PROGRESS',\n\t\t\tcase:\n\t\t\t\t'A classifieds platform made from scratch using modern technologies such as: React, NodeJS, and SCSS. Aiming to provide a smooth, secure, and reliable user experience.'\n\t\t},\n\t\t{\n\t\t\ttitle: 'EVOA',\n\t\t\turl: 'https://volt.ae',\n\t\t\tlocation: 'United Arab Emirates - Dubai',\n\t\t\timg:\n\t\t\t\t'https://evoa.ae/wp-content/themes/belise-lite-child/images/logo.svg',\n\t\t\tcase: '',\n\t\t\tstatus: 'IN PROGRESS'\n\t\t},\n\t\t{\n\t\t\ttitle: 'Cocobum',\n\t\t\turl: 'https://cocobum.com',\n\t\t\tlocation: 'United Arab Emirates - Dubai',\n\t\t\timg:\n\t\t\t\t'https://cdn.shopify.com/s/files/1/0111/0120/8633/files/Logo_PNG_Small_Size_72ee38b7-a8c3-42f4-9238-3187a8f957b2_270x@3x.png?v=1540889485',\n\t\t\tcase: '',\n\t\t\tstatus: '2018'\n\t\t}\n\t];\n\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<Flex\n\t\t\t\tclassName=\"Header\"\n\t\t\t\tpx={2}\n\t\t\t\tpadding={20}\n\t\t\t\tcolor=\"black\"\n\t\t\t\tbg=\"transparent\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\tsx={{ position: 'fixed', top: 0 }}\n\t\t\t\twidth={'100%'}\n\t\t\t>\n\t\t\t\t<Text p={2} fontWeight=\"light\">\n\t\t\t\t\t<Link variant=\"nav\" href=\"ajxb.net\">\n\t\t\t\t\t\tAJXB\n\t\t\t\t\t</Link>\n\t\t\t\t</Text>\n\t\t\t\t<Box mx=\"auto\" />\n\t\t\t\t<Link variant=\"nav\" href=\"mailto:1@ajxb.net\">\n\t\t\t\t\t@\n\t\t\t\t</Link>\n\t\t\t</Flex>\n\t\t\t<Flex className=\"Intro\" mt={75} justifyContent={'center'}>\n\t\t\t\t<Box\n\t\t\t\t\tp={20}\n\t\t\t\t\twidth={['100%', '75%']}\n\t\t\t\t\theight={'80vh'}\n\t\t\t\t\tcolor=\"black\"\n\t\t\t\t\tbg=\"transparent\"\n\t\t\t\t>\n\t\t\t\t\t<Heading\n\t\t\t\t\t\tfontSize={[34, 44]}\n\t\t\t\t\t\tlineHeight={'60vh'}\n\t\t\t\t\t\ttextAlign=\"center\"\n\t\t\t\t\t>\n\t\t\t\t\t\tCreative Development\n\t\t\t\t\t</Heading>\n\t\t\t\t</Box>\n\t\t\t</Flex>\n\t\t\t<Box\n\t\t\t\tflexWrap={'no-wrap'}\n\t\t\t\tpadding={20}\n\t\t\t\tcolor=\"black\"\n\t\t\t\tbg=\"white\"\n\t\t\t\tmb={75}\n\t\t\t\tsx={{ overflow: 'auto' }}\n\t\t\t>\n\t\t\t\t{Projects.map((el, key) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\tclassName=\"Project\"\n\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\tminWidth={DefaultWidth}\n\t\t\t\t\t\t\tflexWrap=\"wrap\"\n\t\t\t\t\t\t\tmt={2}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\tp={100}\n\t\t\t\t\t\t\t\tbackgroundColor=\"white\"\n\t\t\t\t\t\t\t\twidth={[1 / 1]}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Flex justifyContent=\"center\">\n\t\t\t\t\t\t\t\t\t<Box color=\"black\">\n\t\t\t\t\t\t\t\t\t\t<Link variant=\"nav\" href={el.url}>\n\t\t\t\t\t\t\t\t\t\t\t<Heading\n\t\t\t\t\t\t\t\t\t\t\t\tfontSize={[4, 5, 6]}\n\t\t\t\t\t\t\t\t\t\t\t\tfontFamily=\"Avenir\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{el.title}\n\t\t\t\t\t\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t\t<Flex mt={3} justifyContent=\"center\">\n\t\t\t\t\t\t\t\t\t<Box color=\"black\">{el.status}</Box>\n\t\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Box>\n\t\t</ThemeProvider>\n\t);\n});\n\nexport default App;\n","import './index.scss';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}